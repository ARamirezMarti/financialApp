/* 
BUILDING THE TABLES
*/


create table ACCOUNTS(
    ACCOUNT_ID INT NOT NULL AUTO_INCREMENT ,
    ACCOUNT_NAME VARCHAR(25) NOT NULL,
    ACCOUNT_PASS VARCHAR(200) NOT NULL,
    ACCOUNT_EMAIL VARCHAR(25) UNIQUE NOT NULL,
    DATE_IN DATETIME DEFAULT CURRENT_TIMESTAMP,
    
    PRIMARY KEY(ACCOUNT_ID)
);



CREATE TABLE EXPENSES(
    EXPENSES_ID INT NOT NULL AUTO_INCREMENT ,
    ACCOUNT_ID INT NOT NULL,     
    CATEGORY VARCHAR(256),
    EXPECTED_AMOUNT DECIMAL NOT NULL,
    AMOUNT DECIMAL NOT NULL,
    DATE_IN DATETIME DEFAULT CURRENT_TIMESTAMP, 

    PRIMARY KEY (EXPENSES_ID),
    FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNTS(ACCOUNT_ID) ON DELETE CASCADE
    
);
CREATE TABLE INCOME(
    INCOME_ID INT NOT NULL AUTO_INCREMENT ,
    ACCOUNT_ID INT NOT NULL, 
    CATEGORY VARCHAR(256),
    EXPECTED_AMOUNT DECIMAL NOT NULL,
    AMOUNT DECIMAL NOT NULL,
     DATE_IN DATETIME DEFAULT CURRENT_TIMESTAMP,

    PRIMARY KEY (INCOME_ID),
    FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNTS(ACCOUNT_ID) ON DELETE CASCADE
   
);
CREATE TABLE BALANCE(
    BALANCE_ID INT NOT NULL AUTO_INCREMENT  ,
    ACCOUNT_ID INT NOT NULL,    
    EXPENSES_ID INT  NULL,
    INCOME_ID INT NULL,
    TOTAL_INCOME DECIMAL  DEFAULT 0 ,
    TOTAL_EXPENSES DECIMAL  DEFAULT 0,
    TOTAL_AMOUNT DECIMAL  DEFAULT 0,
    DATE_IN DATETIME DEFAULT CURRENT_TIMESTAMP,

    PRIMARY KEY (BALANCE_ID),    
    FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNTS(ACCOUNT_ID) ON DELETE CASCADE,
    FOREIGN KEY (EXPENSES_ID) REFERENCES EXPENSES(EXPENSES_ID) ON DELETE CASCADE,
    FOREIGN KEY (INCOME_ID) REFERENCES INCOME(INCOME_ID) ON DELETE CASCADE

   
);



 ALTER TABLE BALANCE AUTO_INCREMENT = 1;


DELIMITER $$

DROP TRIGGER IF EXISTS `income_AI`;

 CREATE TRIGGER income_AI
   AFTER INSERT ON INCOME
     FOR EACH ROW
       BEGIN
          DECLARE summont decimal(10,2);
          DECLARE expunt decimal(10,2);
           DECLARE TB_AMOUNT decimal(10,2);

            SELECT SUM(AMOUNT) INTO summont from INCOME where new.ACCOUNT_ID=ACCOUNT_ID;
            SELECT SUM(AMOUNT) INTO expunt from EXPENSES where new.ACCOUNT_ID=ACCOUNT_ID;
            set TB_AMOUNT := summont-expunt;

          INSERT INTO BALANCE(ACCOUNT_ID,INCOME_ID,TOTAL_INCOME,TOTAL_EXPENSES,TOTAL_AMOUNT)
          VALUES ((SELECT ACCOUNTS.ACCOUNT_ID FROM INCOME inner join ACCOUNTS on INCOME.ACCOUNT_ID=ACCOUNTS.ACCOUNT_ID limit 1),NEW.INCOME_ID,summont, expunt,TB_AMOUNT);
END;
$$
DELIMITER ;

DELIMITER $$

 CREATE TRIGGER expenses_AI
   AFTER INSERT ON EXPENSES
     FOR EACH ROW
       BEGIN
          DECLARE summont decimal(10,2);
          DECLARE expunt decimal(10,2);
           DECLARE TB_AMOUNT decimal(10,2);

            SELECT SUM(AMOUNT) INTO summont from INCOME where new.ACCOUNT_ID=ACCOUNT_ID;
            SELECT SUM(AMOUNT) INTO expunt from EXPENSES where new.ACCOUNT_ID=ACCOUNT_ID;
            set TB_AMOUNT := summont-expunt;

          INSERT INTO BALANCE(ACCOUNT_ID,EXPENSES_ID,TOTAL_INCOME,TOTAL_EXPENSES,TOTAL_AMOUNT)
          VALUES ((SELECT ACCOUNTS.ACCOUNT_ID FROM INCOME inner join ACCOUNTS on INCOME.ACCOUNT_ID=ACCOUNTS.ACCOUNT_ID limit 1 ),NEW.EXPENSES_ID,summont, expunt,TB_AMOUNT);
END;
$$
DELIMITER ;

DELIMITER $$

 CREATE TRIGGER initial_Entry
   AFTER INSERT ON ACCOUNTS
     FOR EACH ROW
       BEGIN      
        INSERT INTO BALANCE(ACCOUNT_ID, TOTAL_INCOME, TOTAL_EXPENSES, TOTAL_AMOUNT) VALUES (NEW.ACCOUNT_ID,0,0,0);
    
       END
$$
DELIMITER ;
